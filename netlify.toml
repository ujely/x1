# Settings in the [build] context are global and are applied to all contexts
# unless otherwise overridden by more specific contexts.
[build]
  # Directory to change to before starting a build.
  # This is where we will look for package.json/.nvmrc/etc.
  # base = "project/"

  # Directory (relative to root of your repo) that contains the deploy-ready
  # HTML files and assets generated by the build. If a base directory has
  # been specified, include it in the publish directory path.
  publish = "public"

  # Default build command.
  command = "yarn build"

  # Directory with the serverless Lambda functions to deploy to AWS.
  functions = "public/lambda"

# Production context: all deploys from the Production branch set in your site's
# deploy contexts will inherit these settings.
# [context.production]
#   publish = "project/output/"
#   command = "make publish"
#   environment = { ACCESS_TOKEN = "super secret", NODE_VERSION = "8.0.1" }

# Deploy Preview context: all deploys generated from a pull/merge request will
# inherit these settings.
# [context.deploy-preview]
#   publish = "project/dist/"

# Here is another way to define context specific environment variables.
# [context.deploy-preview.environment]
#   ACCESS_TOKEN = "not so secret"

# Branch Deploy context: all deploys that are not from a pull/merge request or
# from the Production branch will inherit these settings.
# [context.branch-deploy]
#   command = "echo branch"
# [context.branch-deploy.environment]
#   NODE_ENV = "development"

# Specific branch context: all deploys from this specific branch will inherit
# these settings.
# [context.staging] # 'staging' is a branch name
#   command = "echo 'staging'"
#   base = "staging"

# For contexts of branches with special characters, enclose the branch name
# with quotes.
# [context."feat/branch"]
#   command = "echo 'special branch'"
#   base = "branch"

# Redirects and headers are GLOBAL for all builds â€“ they do not get scoped to
# contexts no matter where you define them in the file.
# For context-specific rules, use _headers or _redirects files, which are
# PER-DEPLOY.

# Legacy website pages
[[redirects]]
  from = "/pdfs/*"
  to = "/en/"
[[redirects]]
  from = "/brand"
  to = "/en/assets/"
[[redirects]]
  from = "/ether"
  to = "/en/dapps/"
[[redirects]]
  from = "/token"
  to = "/en/developers/"
[[redirects]]
  from = "/crowdsale"
  to = "/en/developers/"
[[redirects]]
  from = "/dao"
  to = "/en/developers/"
[[redirects]]
  from = "/cli"
  to = "/en/developers/"
[[redirects]]
  from = "/greeter"
  to = "/en/developers/"
[[redirects]]
  from = "/search"
  to = "/en/"

# Legacy pages from current site

## English
[[redirects]]
  from = "/use"
  to = "/en/dapps/"
[[redirects]]
  from = "/beginners"
  to = "/en/what-is-ethereum/"

## All translations
[[redirects]]
  from = "/*/beginners"
  to = "/:splat/what-is-ethereum/"

## v1.1 translations
[[redirects]]
  from = "/ar/use"
  to = "/ar/dapps/"
[[redirects]]
  from = "/de/use"
  to = "/de/dapps/"
[[redirects]]
  from = "/fr/use"
  to = "/fr/dapps/"
[[redirects]]
  from = "/id/use"
  to = "/id/dapps/"
[[redirects]]
  from = "/sk/use"
  to = "/sk/dapps/"

# English path redirects
# Force because the files exist (root paths still resolve to English)
[[redirects]]
  from = "/"
  to = "/en/"
  force = true
[[redirects]]
  from = "/what-is-ethereum/"
  to = "/en/what-is-ethereum/"
  force = true
[[redirects]]
  from = "/eth/"
  to = "/en/eth/"
  force = true
[[redirects]]
  from = "/dapps/"
  to = "/en/dapps/"
  force = true
[[redirects]]
  from = "/wallets/"
  to = "/en/wallets/"
  force = true
[[redirects]]
  from = "/learn/"
  to = "/en/learn/"
  force = true
[[redirects]]
  from = "/community/"
  to = "/en/community/"
  force = true
[[redirects]]
  from = "/build/"
  to = "/en/developers/learning-tools/"
  force = true
[[redirects]]
  from = "/developers/"
  to = "/en/developers/"
  force = true
[[redirects]]
  from = "/enterprise/"
  to = "/en/enterprise/"
  force = true
[[redirects]]
  from = "/whitepaper/"
  to = "/en/whitepaper/"
  force = true
[[redirects]]
  from = "/foundation/"
  to = "/en/foundation/"
  force = true
[[redirects]]
  from = "/eips/"
  to = "/en/eips/"
  force = true
[[redirects]]
  from = "/about/"
  to = "/en/about/"
  force = true
[[redirects]]
  from = "/privacy-policy/"
  to = "/en/privacy-policy/"
  force = true
[[redirects]]
  from = "/terms-of-use/"
  to = "/en/terms-of-use/"
  force = true
[[redirects]]
  from = "/cookie-policy/"
  to = "/en/cookie-policy/"
  force = true
[[redirects]]
  from = "/languages/"
  to = "/en/languages/"
  force = true
[[redirects]]
  from = "/enterprise/"
  to = "/en/enterprise/"
  force = true
[[redirects]]
  from = "/java/"
  to = "/en/developers/docs/programming-languages/java/"
  force = true
[[redirects]]
  from = "/python/"
  to = "/en/developers/docs/programming-languages/python/"
  force = true
[[redirects]]
  from = "/javascript/"
  to = "/en/developers/docs/programming-languages/javascript/"
  force = true
[[redirects]]
  from = "/golang/"
  to = "/en/developers/docs/programming-languages/golang/"
  force = true
[[redirects]]
  from = "/rust/"
  to = "/en/developers/docs/programming-languages/rust/"
  force = true
[[redirects]]
  from = "/dot-net/"
  to = "/en/developers/docs/programming-languages/dot-net/"
  force = true
[[redirects]]
  from = "/delphi/"
  to = "/en/developers/docs/programming-languages/delphi/"
  force = true

# Norwegian update
## All translations
[[redirects]]
  from = "/no/*"
  to = "/nb/:splat"

# EDN updates
[[redirects]]
  from = "/en/build/"
  to = "/en/developers/learning-tools/"
[[redirects]]
  from = "/en/java/"
  to = "/en/developers/docs/programming-languages/java/"
[[redirects]]
  from = "/en/python/"
  to = "/en/developers/docs/programming-languages/python/"
[[redirects]]
  from = "/en/javascript/"
  to = "/en/developers/docs/programming-languages/javascript/"
[[redirects]]
  from = "/en/golang/"
  to = "/en/developers/docs/programming-languages/golang/"
[[redirects]]
  from = "/en/rust/"
  to = "/en/developers/docs/programming-languages/rust/"
[[redirects]]
  from = "/en/dot-net/"
  to = "/en/developers/docs/programming-languages/dot-net/"
[[redirects]]
  from = "/en/delphi/"
  to = "/en/developers/docs/programming-languages/delphi/"


# English fallback redirect
# If no page exists at /request-url, redirect to /en/request-url
# WARNING: this causes the development environment to fail when running `netlify dev`
# https://github.com/netlify/cli/issues/1299
# [[redirects]]
#   from = "/*"
#   to = "/en/:splat"
#   force = false

# A redirect rule with all the supported properties
# [[redirects]]
#   from = "/old-path"
#   to = "/new-path"

  # The default HTTP status code is 301, but you can define a different one.
  # status = 302

  # By default, redirects won't be applied if there's a file with the same
  # path as the one defined in the `from` property. Setting `force` to `true`
  # will make the redirect rule take precedence over any existing files.
  # force = true

  # Redirect from /old-path?id=123 to /new-path. Each combination of query
  # params needs to be defined in a separate [[redirects]] block.
  # More information at https://docs.netlify.com/routing/redirects/redirect-options/#query-parameters
  # query = {id = ":id"}

  # Redirect based on browser language, geolocation, and/or identity role.
  # conditions = {Language = ["en"], Country = ["US"]}

  # Sign each request with a value defined in an environment variable
  # signed = "API_SIGNATURE_TOKEN"

  # You can also define custom headers within your redirects blocks.
  # [redirects.headers]
  #   X-From = "Netlify"
  #   X-Api-Key = "some-api-key-string"

# Role-based redirects does not have a 'to' property.
# [[redirects]]
#   from = "/gated-path"
#   status = 200
#   conditions = {Role = ["admin"]}
#   force = true

# The following redirect is intended for use with most SPAs that handle
# routing internally.
# [[redirects]]
#   from = "/*"
#   to = "/index.html"
#   status = 200

# https://docs.netlify.com/routing/headers/#syntax-for-the-netlify-configuration-file
[[headers]]
  # Define which paths this specific [[headers]] block will cover.
  for = "/*"

  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
  #   Content-Security-Policy = "frame-ancestors https://www.facebook.com"

    # Multi-value headers are expressed with multi-line strings.
	# cache-control = '''
	# max-age=0,
	# no-cache,
	# no-store,
	# must-revalidate'''

    # Basic-Auth allows you to password protect your whole site.
    # This feature may not be available on all plans.
    # Basic-Auth = "someuser:somepassword anotheruser:anotherpassword"